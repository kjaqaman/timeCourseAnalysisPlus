function [tracks1SegMobility,tracks2plusSegMobility,tracksMergeSplit,...
    tracks1SegFollowerProp,tracks2plusSegFollowerProp] = ...
    analyzeMasterMoveMergeSplitRelFollower(tracksMF,tracksF,...
    diffModeDividerStruct,timeTolFromMerge)
%ANALYZEMASTERMOVEMEGESPLITRELFOLLOWER analyzes movement, merging and splitting of master channel molecules relative to follower channel properties
%
%SYNPOSIS [tracks1SegMobility,tracks2plusSegMobility,tracksMergeSplit] = ...
%    analyzeMasterMoveMergeSplitRelFollower(tracksMF,tracksF,...
%    diffModeDividerStruct,timeTolFromMerge)
%
%INPUT  tracksMF, tracksF    : Output of getFollowerTracksFromMaster.
%                              MUST BE IN ALTERNATIVE FORMAT (see
%                              getFollowerTracksFromMaster for format details).
%       diffModeDividerStruct: Diffusion mode divider structure, as input
%                              to trackDiffModeAnalysis.
%       timeTolFromMerge     : Allowed time difference (in frames) between
%                              last presence of follower with a merging
%                              segment and its merge time.
%                              Optional. Default: 10.
%
%OUTPUT tracks1SegMobility   : Output of analyzeMasterMobilityCondFollower
%                              as applied to tracks with 1 segement,
%                              assembled into a structure.
%       tracks2plusSegMobility:Output of analyzeMasterMobilityCondFollower
%                              as applied to tracks with 2+ segements,
%                              assembled into a structure.
%       tracksMergeSplit     : Output of
%                              analyzeMasterMergingSplittingRelFollower as
%                              applied to tracks with 2+segments, assembled
%                              into a structure.
%
%Khuloud Jaqaman, July 2019
%
% Copyright (C) 2020, Jaqaman Lab - UT Southwestern 
%
% This file is part of timeCourseAnalysisPlus.
% 
% timeCourseAnalysisPlus is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
% 
% timeCourseAnalysisPlus is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with timeCourseAnalysisPlus.  If not, see <http://www.gnu.org/licenses/>.
% 
% 

%% Input

if nargin < 4 || isempty(timeTolFromMerge)
    timeTolFromMerge = 10;
end

%determine tracks with 1 segment or 2+ segments
numSegments = getNumSegmentsPerTrack(tracksMF);
% indx1Seg = find(numSegments == 1);
indx2plus = find(numSegments > 1);

%HACK TO ANALYZE ALL TRACKS TOGETHER INSTEAD OF THOSE WITH 1SEG ONLY
indx1Seg = (1 : length(numSegments))';

%% Movement analysis

%tracks with 1 segment
[fracTracksWithF,fracTracksWithFperMode,fracTracksDiffModeCombo,...
    fracTracksDiffModeNoF,meanDiffCoefBeforeModeCombo,meanDiffCoefDuringModeCombo,...
    ratioDiffCoefDurBefModeCombo,meanDiffCoefModeNoF] = ...
    analyzeMasterMobilityCondFollower(tracksMF(indx1Seg),tracksF(indx1Seg),...
    diffModeDividerStruct);

tracks1SegMobility = struct('fracTracksWithF',fracTracksWithF,...
    'fracTracksWithFperMode',fracTracksWithFperMode,...
    'fracDiffModeComboTracksWithF',fracTracksDiffModeCombo,...
    'fracDiffModeTracksNoF',fracTracksDiffModeNoF,...
    'meanDiffCoefBeforeModeCombo',meanDiffCoefBeforeModeCombo,...
    'meanDiffCoefDuringModeCombo',meanDiffCoefDuringModeCombo,...
    'ratioDiffCoefDurBefModeCombo',ratioDiffCoefDurBefModeCombo,...
    'meanDiffCoefModeNoF',meanDiffCoefModeNoF);

%tracks with 2+ segments
[fracTracksWithF,fracTracksWithFperMode,fracTracksDiffModeCombo,...
    fracTracksDiffModeNoF,meanDiffCoefBeforeModeCombo,meanDiffCoefDuringModeCombo,...
    ratioDiffCoefDurBefModeCombo,meanDiffCoefModeNoF] = ...
    analyzeMasterMobilityCondFollower(tracksMF(indx2plus),tracksF(indx2plus),...
    diffModeDividerStruct);

tracks2plusSegMobility = struct('fracTracksWithF',fracTracksWithF,...
    'fracTracksWithFperMode',fracTracksWithFperMode,...
    'fracDiffModeComboTracksWithF',fracTracksDiffModeCombo,...
    'fracDiffModeTracksNoF',fracTracksDiffModeNoF,...
    'meanDiffCoefBeforeModeCombo',meanDiffCoefBeforeModeCombo,...
    'meanDiffCoefDuringModeCombo',meanDiffCoefDuringModeCombo,...
    'ratioDiffCoefDurBefModeCombo',ratioDiffCoefDurBefModeCombo,...
    'meanDiffCoefModeNoF',meanDiffCoefModeNoF);

%% Merging and splitting analysis

%obviously tracks with 2+ segments
[fracFollowerBefAmongMergesWithFollowerAft,fracMonoNoFollowerBefMerge,...
    fracMonoWithFollowerBefMerge,meanOligoNoFollowerBefMerge,...
    meanOligoWithFollowerBefMerge,infoMergeAftBef,infoSplitBefAft] = ...
    analyzeMasterMergingSplittingRelFollower(tracksMF(indx2plus),tracksF(indx2plus),timeTolFromMerge);

tracksMergeSplit = struct('fracFollowerBefAmongMergesWithFollowerAft',fracFollowerBefAmongMergesWithFollowerAft,...
    'fracMonoNoFollowerBefMerge',fracMonoNoFollowerBefMerge,...
    'fracMonoWithFollowerBefMerge',fracMonoWithFollowerBefMerge,...
    'meanOligoNoFollowerBefMerge',meanOligoNoFollowerBefMerge,...
    'meanOligoWithFollowerBefMerge',meanOligoWithFollowerBefMerge,...
    'infoMergeAftBef',infoMergeAftBef,'infoSplitBefAft',infoSplitBefAft);

%% follower properties vs. oligomeric state

%tracks with 1 segment
[fracTime0Start2Follower,meanTimeStart2Follower,meanFracTimeWithFollower,...
    meanFollowerConsistency,meanTrackDuration,timeStart2Follower, ...
    fracTimeWithFollower,followerConsistency,trackDuration] = ...
    analyzeFollowerPropVsMasterOligo(tracksMF(indx1Seg),tracksF(indx1Seg));

tracks1SegFollowerProp = struct('fracTime0Start2Follower',fracTime0Start2Follower,...
    'meanTimeStart2Follower',meanTimeStart2Follower,...
    'meanFracTimeWithFollower',meanFracTimeWithFollower,...
    'meanFollowerConsistency',meanFollowerConsistency,...
    'meanTrackDuration',meanTrackDuration);
tracks1SegFollowerProp.timeStart2Follower = timeStart2Follower;
tracks1SegFollowerProp.fracTimeWithFollower = fracTimeWithFollower;
tracks1SegFollowerProp.followerConsistency = followerConsistency;
tracks1SegFollowerProp.trackDuration = trackDuration;

%tracks with 2+ segment
[fracTime0Start2Follower,meanTimeStart2Follower,meanFracTimeWithFollower,...
    meanFollowerConsistency,meanTrackDuration,timeStart2Follower, ...
    fracTimeWithFollower,followerConsistency,trackDuration] = ...
    analyzeFollowerPropVsMasterOligo(tracksMF(indx2plus),tracksF(indx2plus));

tracks2plusSegFollowerProp = struct('fracTime0Start2Follower',fracTime0Start2Follower,...
    'meanTimeStart2Follower',meanTimeStart2Follower,...
    'meanFracTimeWithFollower',meanFracTimeWithFollower,...
    'meanFollowerConsistency',meanFollowerConsistency,...
    'meanTrackDuration',meanTrackDuration);
tracks2plusSegFollowerProp.timeStart2Follower = timeStart2Follower;
tracks2plusSegFollowerProp.fracTimeWithFollower = fracTimeWithFollower;
tracks2plusSegFollowerProp.followerConsistency = followerConsistency;
tracks2plusSegFollowerProp.trackDuration = trackDuration;



